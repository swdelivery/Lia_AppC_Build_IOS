import { Promotion } from "./affiliate";
import { AppointmentDate } from "./booking";
import { Branch } from "./branch";
import { FileAvatar, Timestamp } from "./common";
import { Doctor } from "./doctor";
import { Deposit, Order } from "./payment";
import { Practitioner } from "./practitioner";
import { Service } from "./serviceGroup";
import { UserProfile } from "./user";
export type ExaminationResult = {
  partner: UserProfile;
  partnerPhone: {
    nationCode: string;
    phoneNumber: string;
  };
  appointmentDateFinal: AppointmentDate;
  consultationInfo: {
    groups: string[];
    tags: string[];
    consultedServices: string[];
    acceptedServices: string[];
  };
  type: string;
  promotionId: string;
  sourceCodeArr: string[];
  insuranceCodeArr: string[];
  groupCodeArr: string[];
  consultationResult: string[];
  depositIdArr: string[];
  currentDepositId: string;
  orderId: string;
  startProgressAt: string;
  completeProgressAt: string;
  serviceNeedCareCodeArr: string[];
  description: string;
  partnerCouponIdArr: string[];
  needPickUp: boolean;
  desiredFoodDrinkCodeArr: string[];
  consultantId: string;
  consultationNote: string;
  currentStatus: string;
  reason: string;
  solution: string;
  medicalHistory: string[];
  evidenceImages: FileAvatar[];
  latestTreatmentQueueId: string;
  treatmentQueueIdArr: string[];
  treatmentDetailIdArr: string[];
  isFirstBooking: boolean;
  isNoAppointment: boolean;
  status: string;
  isConfirmReferral: boolean;
  totalAmount: number;
  isActive: boolean;
  userCreate: string;
  createdBy: string;
  userUpdate: string;
  isDelete: boolean;
  _id: string;
  branchCode: string;
  services: any;
  assignedDoctorCode: string;
  assignedPractitionerCode: string;
  code: string;
  partnerId: string;
  partnerName: string;
  partnerLevelPromotion: Promotion;
  referralPartnerLevelPromotion: Promotion;
  partnerPhoneNumber: string;
  appointmentDateArr: AppointmentDate[];
  insurances: string[];
  utilities: string;
  __v: number;
  checkInAt: string;
  queueConsultationId: string;
  startConsultationAt: string;
  completeConsultationAt: string;
  branch: Branch;
  servicesNeedCare: Service[];
  queueConsultation: any;
  order: Order;
  deposits: Deposit[];
  latestTreatmentQueue: any;
  partnerCoupons: any;
  desiredFoodDrinkArr: string[];
  id: string;
  consultationJoinDoctor: Doctor;
  consultationJoinPractitioner: Practitioner;
  consultationJoinDoctorCode: string;
} & Timestamp
